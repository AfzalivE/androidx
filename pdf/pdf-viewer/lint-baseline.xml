<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.4.0-alpha12" type="baseline" client="gradle" dependencies="false" name="AGP (8.4.0-alpha12)" variant="all" version="8.4.0-alpha12">

    <issue
        id="BanConcurrentHashMap"
        message="Detected ConcurrentHashMap usage."
        errorLine1="import java.util.concurrent.ConcurrentHashMap;"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="BanParcelableUsage"
        message="Class implements android.os.Parcelable"
        errorLine1="public class ChoiceOption implements Parcelable {"
        errorLine2="             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/ChoiceOption.java"/>
    </issue>

    <issue
        id="BanParcelableUsage"
        message="Class implements android.os.Parcelable"
        errorLine1="public class ContentOpenable implements Openable, Parcelable {"
        errorLine2="             ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/ContentOpenable.java"/>
    </issue>

    <issue
        id="BanParcelableUsage"
        message="Class implements android.os.Parcelable"
        errorLine1="public class Dimensions implements Parcelable {"
        errorLine2="             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/Dimensions.java"/>
    </issue>

    <issue
        id="BanParcelableUsage"
        message="Class implements android.os.Parcelable"
        errorLine1="public class FileOpenable implements Openable, Parcelable {"
        errorLine2="             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FileOpenable.java"/>
    </issue>

    <issue
        id="BanParcelableUsage"
        message="Class implements android.os.Parcelable"
        errorLine1="public class LinkRects extends ListOfList&lt;Rect> implements Parcelable {"
        errorLine2="             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/LinkRects.java"/>
    </issue>

    <issue
        id="BanParcelableUsage"
        message="Class implements android.os.Parcelable"
        errorLine1="public class MatchRects extends ListOfList&lt;Rect> implements Parcelable {"
        errorLine2="             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/MatchRects.java"/>
    </issue>

    <issue
        id="BanParcelableUsage"
        message="Class implements android.os.Parcelable"
        errorLine1="public class SelectionBoundary implements Parcelable {"
        errorLine2="             ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/SelectionBoundary.java"/>
    </issue>

    <issue
        id="BanParcelableUsage"
        message="Class implements android.os.Parcelable"
        errorLine1="public class TextSelection implements Parcelable {"
        errorLine2="             ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/TextSelection.java"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    /** Bootstrap {@link AppInfo} from any {@link Context}. Can be called multiple times. */"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/pdf/util/AppInfo.java"/>
    </issue>

    <issue
        id="BanTargetApiAnnotation"
        message="Use `@RequiresApi` instead of `@TargetApi`"
        errorLine1="        @TargetApi(17) // Guarded by elapsedRealtimeNanosExists()"
        errorLine2="        ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/persistence/SystemClockImpl.java"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class is missing private constructor"
        errorLine1="public class Intents {"
        errorLine2="             ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Intents.java"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; SDK_INT is always >= 30"
        errorLine1="        if (VERSION.SDK_INT >= VERSION_CODES.Q) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ExifThumbnailUtils.java"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; SDK_INT is always >= 17"
        errorLine1="        @TargetApi(17) // Guarded by elapsedRealtimeNanosExists()"
        errorLine2="        ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/persistence/SystemClockImpl.java"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; SDK_INT is always >= 30"
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/persistence/SystemClockImpl.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 1, &quot;obs&quot;, in androidx.pdf.data.FutureValues.observeAsFuture) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            T... target) {"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 1, &quot;r&quot;, in androidx.pdf.util.ThreadUtils.postOnUiThreadDelayed) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="    public static void postOnUiThreadDelayed(Runnable r, long delay) {"
        errorLine2="                                                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ThreadUtils.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 1, &quot;sourceFuture&quot;, in androidx.pdf.data.UiFutureValues.pipe) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="    public static &lt;T> void pipe(FutureValue&lt;T> sourceFuture, SettableFutureValue&lt;T> targetFuture) {"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 2, &quot;converter&quot;, in androidx.pdf.data.UiFutureValues.convert) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            final SettableFutureValue&lt;T> destFuture) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static final Accessibility get() {"
        errorLine2="                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Accessibility.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean isTouchExplorationEnabled(Context context) {"
        errorLine2="                                             ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Accessibility.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean isAccessibilityEnabled(Context context) {"
        errorLine2="                                          ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Accessibility.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void announce(Context context, View source, String message) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Accessibility.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void announce(Context context, View source, String message) {"
        errorLine2="                                          ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Accessibility.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void announce(Context context, View source, String message) {"
        errorLine2="                                                       ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Accessibility.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void announce(Context context, View source, int messageId) {"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Accessibility.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void announce(Context context, View source, int messageId) {"
        errorLine2="                                          ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Accessibility.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getAppVersion() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/AppInfo.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getPackageName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/AppInfo.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public BitmapParcel(Bitmap bitmap) {"
        errorLine2="                        ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/BitmapParcel.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void receiveBitmap(Bitmap bitmap, ParcelFileDescriptor sourceFd) {"
        errorLine2="                                 ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/BitmapParcel.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void receiveBitmap(Bitmap bitmap, ParcelFileDescriptor sourceFd) {"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/BitmapParcel.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Bitmap obtainBitmap(Dimensions dimensions) {"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/BitmapRecycler.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static int getMemSizeKb(Bitmap bitmap) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/BitmapRecycler.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Map&lt;String, String> getMapFrom(Bundle bundle) {"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/BundleUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static boolean bundleEquals(Bundle b1, Bundle b2) {"
        errorLine2="                                       ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/BundleUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static boolean bundleEquals(Bundle b1, Bundle b2) {"
        errorLine2="                                                  ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/BundleUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ChoiceOption(int index, String label, boolean selected) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/ChoiceOption.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ChoiceOption(ChoiceOption option) {"
        errorLine2="                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/ChoiceOption.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected ChoiceOption(Parcel in) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/ChoiceOption.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getLabel() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/ChoiceOption.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setLabel(String label) {"
        errorLine2="                         ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/ChoiceOption.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void writeToParcel(Parcel dest, int flags) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/ChoiceOption.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> Iterable&lt;T> asIterable(final SparseArray&lt;T> array) {"
        errorLine2="                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CollectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> Iterable&lt;T> asIterable(final SparseArray&lt;T> array) {"
        errorLine2="                                                   ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CollectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> Iterator&lt;T> makeIterator(final SparseArray&lt;T> array) {"
        errorLine2="                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CollectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> Iterator&lt;T> makeIterator(final SparseArray&lt;T> array) {"
        errorLine2="                                                     ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CollectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Iterable&lt;Integer> iterableKeys(final SparseArray&lt;?> array) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CollectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Iterable&lt;Integer> iterableKeys(final SparseArray&lt;?> array) {"
        errorLine2="                                                       ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CollectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Iterator&lt;Integer> makeKeyIterator(final SparseArray&lt;?> array) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CollectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Iterator&lt;Integer> makeKeyIterator(final SparseArray&lt;?> array) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CollectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ContentOpenable(@NonNull Uri uri, String contentType) {"
        errorLine2="                                             ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/ContentOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ContentOpenable(@NonNull Uri uri, Dimensions size) {"
        errorLine2="                                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/ContentOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Uri getContentUri() {"
        errorLine2="           ~~~">
        <location
            file="src/main/java/androidx/pdf/data/ContentOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Open openWith(Opener opener) throws IOException {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/pdf/data/ContentOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Open openWith(Opener opener) throws IOException {"
        errorLine2="                         ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/ContentOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void writeToParcel(Parcel dest, int flags) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/ContentOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ContentUriOpener(ContentResolver contentResolver) {"
        errorLine2="                            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AssetFileDescriptor openPreview(Uri contentUri, Point size)"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AssetFileDescriptor openPreview(Uri contentUri, Point size)"
        errorLine2="                                           ~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AssetFileDescriptor openPreview(Uri contentUri, Point size)"
        errorLine2="                                                           ~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public int getExifOrientation(Uri contentUri) {"
        errorLine2="                                  ~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AssetFileDescriptor open(Uri contentUri, String contentType)"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AssetFileDescriptor open(Uri contentUri, String contentType)"
        errorLine2="                                    ~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AssetFileDescriptor open(Uri contentUri, String contentType)"
        errorLine2="                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getContentType(Uri contentUri) {"
        errorLine2="                                 ~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String[] getAvailableTypes(Uri contentUri) {"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String[] getAvailableTypes(Uri contentUri) {"
        errorLine2="                                      ~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static String extractContentName(ContentResolver contentResolver, Uri contentUri) {"
        errorLine2="                                            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static String extractContentName(ContentResolver contentResolver, Uri contentUri) {"
        errorLine2="                                                                             ~~~">
        <location
            file="src/main/java/androidx/pdf/util/ContentUriOpener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static CycleRange of(int start, int size, Direction direction) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CycleRange.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static CycleRange of(int start, int size, Direction direction) {"
        errorLine2="                                                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CycleRange.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Iterator iterator() {"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CycleRange.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Integer peekNext() {"
        errorLine2="               ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CycleRange.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Direction getDirection() {"
        errorLine2="               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/CycleRange.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Dimensions(Rect rect) {"
        errorLine2="                      ~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/Dimensions.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void writeToParcel(Parcel parcel, int flags) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/Dimensions.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public DiskCache(Context context) {"
        errorLine2="                     ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/DiskCache.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Uri getUri() {"
        errorLine2="           ~~~">
        <location
            file="src/main/java/androidx/pdf/data/DisplayData.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/DisplayData.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Openable getOpenable() {"
        errorLine2="           ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/DisplayData.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public DrawSpec(Paint paint, List&lt;Rect> rects) {"
        errorLine2="                    ~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/DrawSpec.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public DrawSpec(Paint paint, List&lt;Rect> rects) {"
        errorLine2="                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/DrawSpec.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public abstract void draw(Canvas canvas);"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/DrawSpec.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void log(String tag, String message) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void log(String tag, String message) {"
        errorLine2="                                       ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void log(String tag, String message, String details) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void log(String tag, String message, String details) {"
        errorLine2="                                       ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void log(String tag, String message, String details) {"
        errorLine2="                                                       ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void log(String tag, String method, Throwable e) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void log(String tag, String method, Throwable e) {"
        errorLine2="                                       ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void log(String tag, String method, Throwable e) {"
        errorLine2="                                                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void logAndThrow(String tag, String method, Throwable e) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void logAndThrow(String tag, String method, Throwable e) {"
        errorLine2="                                               ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void logAndThrow(String tag, String method, Throwable e) {"
        errorLine2="                                                              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void logAndThrow(String tag, String method, String message) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void logAndThrow(String tag, String method, String message) {"
        errorLine2="                                               ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void logAndThrow(String tag, String method, String message) {"
        errorLine2="                                                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void logAndAlwaysThrow(String tag, String method, Throwable e) {"
        errorLine2="                                         ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void logAndAlwaysThrow(String tag, String method, Throwable e) {"
        errorLine2="                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void logAndAlwaysThrow(String tag, String method, Throwable e) {"
        errorLine2="                                                                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void checkState(boolean condition, String tag, String method, String message) {"
        errorLine2="                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void checkState(boolean condition, String tag, String method, String message) {"
        errorLine2="                                                                 ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void checkState(boolean condition, String tag, String method, String message) {"
        errorLine2="                                                                                ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static String bracketValue(int value) {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ErrorLog.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static int getExifOrientation(Uri contentUri, ContentResolver contentResolver) {"
        errorLine2="                                         ~~~">
        <location
            file="src/main/java/androidx/pdf/util/ExifThumbnailUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static int getExifOrientation(Uri contentUri, ContentResolver contentResolver) {"
        errorLine2="                                                         ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ExifThumbnailUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Fetcher build(Context context) {"
        errorLine2="                  ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Fetcher build(Context context) {"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Fetcher build(Context context, int numThreads) {"
        errorLine2="                  ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Fetcher build(Context context, int numThreads) {"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected Fetcher(Context ctx, DiskCache diskCache, int numThreads) {"
        errorLine2="                      ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected Fetcher(Context ctx, DiskCache diskCache, int numThreads) {"
        errorLine2="                                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public DiskCache getCache() {"
        errorLine2="           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadLocal(Uri localUri) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadLocal(Uri localUri) {"
        errorLine2="                                           ~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadContent(Uri contentUri) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadContent(Uri contentUri) {"
        errorLine2="                                             ~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadContent(Uri contentUri, String useType) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadContent(Uri contentUri, String useType) {"
        errorLine2="                                             ~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadContent(Uri contentUri, String useType) {"
        errorLine2="                                                             ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadContent(Uri contentUri, Dimensions size) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadContent(Uri contentUri, Dimensions size) {"
        errorLine2="                                             ~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadContent(Uri contentUri, Dimensions size) {"
        errorLine2="                                                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadFile(Uri fileUri) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FutureValue&lt;Openable> loadFile(Uri fileUri) {"
        errorLine2="                                          ~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/Fetcher.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FileOpenable(File file, @Nullable String mimeType) throws FileNotFoundException {"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FileOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public FileOpenable(Uri uri) throws FileNotFoundException {"
        errorLine2="                        ~~~">
        <location
            file="src/main/java/androidx/pdf/data/FileOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Open openWith(Opener opener) throws IOException {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FileOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Open openWith(Opener opener) throws IOException {"
        errorLine2="                         ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FileOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getFileName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FileOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Uri getFileUri() {"
        errorLine2="           ~~~">
        <location
            file="src/main/java/androidx/pdf/data/FileOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void writeToParcel(Parcel dest, int flags) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FileOpenable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void get(Callback&lt;T> callback);"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValue.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void failed(Throwable thrown);"
        errorLine2="                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValue.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> newImmediateValue(T value) {"
        errorLine2="                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> immediateFail(final Exception error) {"
        errorLine2="                                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            T... target) {"
        errorLine2="            ~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void failed(Throwable thrown) {"
        errorLine2="                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void failed(Throwable thrown) {"
        errorLine2="                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public DeferredFutureValue(Supplier&lt;FutureValue&lt;T>> computation) {"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void get(Callback&lt;T> callback) {"
        errorLine2="                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void fail(Throwable thrown) {"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void fail(String errorMessage) {"
        errorLine2="                         ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void get(Callback&lt;T> callback) {"
        errorLine2="                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/FutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected HighlightOverlay(DrawSpec... drawSpecs) {"
        errorLine2="                               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/HighlightOverlay.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void draw(Canvas canvas) {"
        errorLine2="                     ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/HighlightOverlay.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setColorFilter(ColorFilter cf) {"
        errorLine2="                               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/HighlightOverlay.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Paint getOutlinedCommentAnchorPaint() {"
        errorLine2="                  ~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/HighlightPaint.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Paint getOutlinedSelectedCommentAnchorPaint() {"
        errorLine2="                  ~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/HighlightPaint.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Paint getWhiteOutlinePaint() {"
        errorLine2="                  ~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/HighlightPaint.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public LinkRects(List&lt;Rect> rects, List&lt;Integer> linkToRect, List&lt;String> urls) {"
        errorLine2="                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/LinkRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public LinkRects(List&lt;Rect> rects, List&lt;Integer> linkToRect, List&lt;String> urls) {"
        errorLine2="                                       ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/LinkRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public LinkRects(List&lt;Rect> rects, List&lt;Integer> linkToRect, List&lt;String> urls) {"
        errorLine2="                                                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/LinkRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getUrl(int link) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/LinkRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void writeToParcel(Parcel parcel, int flags) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/LinkRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ListOfList(List&lt;T> values, List&lt;Integer> indexToFirstValue) {"
        errorLine2="                      ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/ListOfList.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ListOfList(List&lt;T> values, List&lt;Integer> indexToFirstValue) {"
        errorLine2="                                      ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/ListOfList.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;T> flatten() {"
        errorLine2="           ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/ListOfList.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public MatchRects(List&lt;Rect> rects, List&lt;Integer> matchToRect, List&lt;Integer> charIndexes) {"
        errorLine2="                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/MatchRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public MatchRects(List&lt;Rect> rects, List&lt;Integer> matchToRect, List&lt;Integer> charIndexes) {"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/MatchRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public MatchRects(List&lt;Rect> rects, List&lt;Integer> matchToRect, List&lt;Integer> charIndexes) {"
        errorLine2="                                                                   ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/MatchRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Rect getFirstRect(int match) {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/MatchRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;Rect> flattenExcludingMatch(int match) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/MatchRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void writeToParcel(Parcel parcel, int flags) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/MatchRects.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static int getMaxTileSize(Context context) {"
        errorLine2="                                     ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected BitmapRecycler mBitmapRecycler;"
        errorLine2="              ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected BitmapSource mBitmapSource;"
        errorLine2="              ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public MosaicView(Context context) {"
        errorLine2="                      ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public MosaicView(Context context, AttributeSet attrs) {"
        errorLine2="                      ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public MosaicView(Context context, AttributeSet attrs) {"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public MosaicView(Context context, AttributeSet attrs, int defStyle) {"
        errorLine2="                      ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public MosaicView(Context context, AttributeSet attrs, int defStyle) {"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void init(Dimensions dimensions, BitmapRecycler bitmapRecycler,"
        errorLine2="                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void init(Dimensions dimensions, BitmapRecycler bitmapRecycler,"
        errorLine2="                                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            BitmapSource bitmapSource) {"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void requestPageBitmap(Dimensions pageSize, boolean alsoRequestingTiles);"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void requestNewTiles(Dimensions pageSize, Iterable&lt;TileBoard.TileInfo> newTiles);"
        errorLine2="                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void requestNewTiles(Dimensions pageSize, Iterable&lt;TileBoard.TileInfo> newTiles);"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void cancelTiles(Iterable&lt;Integer> tileIds);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected Dimensions getPageDimensionsAtWidth(int width) {"
        errorLine2="              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void addOverlay(String key, Drawable overlay) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void addOverlay(String key, Drawable overlay) {"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean hasOverlay(String key) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void removeOverlay(String key) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected TileBoard createTileBoard(Dimensions viewSize) {"
        errorLine2="              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected TileBoard createTileBoard(Dimensions viewSize) {"
        errorLine2="                                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setFailure(String message) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void requestRedrawAreas(final List&lt;Rect> invalidRects) {"
        errorLine2="                                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setViewArea(Rect viewArea) {"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Rect getViewArea() {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected boolean clipAreaToPageSize(Rect scaledViewArea, Dimensions pageSize) {"
        errorLine2="                                         ~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected boolean clipAreaToPageSize(Rect scaledViewArea, Dimensions pageSize) {"
        errorLine2="                                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setTileBitmap(TileBoard.TileInfo tileInfo, Bitmap tileBitmap) {"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void setTileBitmap(TileBoard.TileInfo tileInfo, Bitmap tileBitmap) {"
        errorLine2="                                                           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void onDraw(Canvas canvas) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void dispatchDraw(Canvas canvas) {"
        errorLine2="                                ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected boolean drawChild(Canvas canvas, View child, long drawingTime) {"
        errorLine2="                                ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/MosaicView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    Object addObserver(T observer);"
        errorLine2="    ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void removeObserver(Object observerKey);"
        errorLine2="                        ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    Iterable&lt;Integer> keys();"
        errorLine2="    ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ObservableArray.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Object addObserver(O observer) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observables.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void removeObserver(Object observer) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observables.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Iterator&lt;O> iterator() {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observables.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;V> ExposedValue&lt;V> newExposedValue() {"
        errorLine2="                      ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observables.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;V> ExposedValue&lt;V> newExposedValueWithInitialValue(V initialValue) {"
        errorLine2="                      ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observables.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Iterable&lt;Integer> keys() {"
        errorLine2="               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observables.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;V> ExposedArray&lt;V> newExposedArray() {"
        errorLine2="                      ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observables.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Object addObserver(O observer) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observables.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void removeObserver(Object observer) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observables.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        protected Iterable&lt;O> getObservers() {"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Observables.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    Open openWith(Opener opener) throws IOException;"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/Openable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        InputStream getInputStream() throws IOException;"
        errorLine2="        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/Openable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        ParcelFileDescriptor getFd() throws IOException;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/Openable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        String getContentType();"
        errorLine2="        ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/Openable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Opener(Context ctx) {"
        errorLine2="                  ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/Opener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Opener(ContentUriOpener contentOpener) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/Opener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected Open open(ContentOpenable content) throws FileNotFoundException {"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/Opener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Open openLocal(Uri localUri) throws IOException {"
        errorLine2="                          ~~~">
        <location
            file="src/main/java/androidx/pdf/data/Opener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public int getContentExifOrientation(ContentOpenable contentOpenable) {"
        errorLine2="                                         ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/Opener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getContentType(Uri uri) {"
        errorLine2="                                 ~~~">
        <location
            file="src/main/java/androidx/pdf/data/Opener.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public PageSelection(int page, SelectionBoundary start, SelectionBoundary stop,"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/PageSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public PageSelection(int page, SelectionBoundary start, SelectionBoundary stop,"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/PageSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            List&lt;Rect> rects, String text) {"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/PageSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            List&lt;Rect> rects, String text) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/PageSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;Rect> getRects() {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/PageSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getText() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/PageSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void writeToParcel(Parcel parcel, int flags) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/PageSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public PdfHighlightOverlay(PageSelection selection) {"
        errorLine2="                               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/viewer/pdf/PdfHighlightOverlay.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public PdfHighlightOverlay(MatchRects matchRects) {"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/viewer/pdf/PdfHighlightOverlay.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public PdfHighlightOverlay(MatchRects matchRects, int currentMatch) {"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/viewer/pdf/PdfHighlightOverlay.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void checkState(boolean state, String message) {"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Preconditions.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void checkArgument(boolean state, String message)"
        errorLine2="                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Preconditions.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public RectDrawSpec(Paint paint, List&lt;Rect> shapes) {"
        errorLine2="                        ~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectDrawSpec.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public RectDrawSpec(Paint paint, List&lt;Rect> shapes) {"
        errorLine2="                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectDrawSpec.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void draw(Canvas canvas) {"
        errorLine2="                     ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectDrawSpec.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Rect scale(Rect rect, float scale) {"
        errorLine2="                  ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Rect scale(Rect rect, float scale) {"
        errorLine2="                             ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Rect scale(Rect rect, float scaleX, float scaleY) {"
        errorLine2="                  ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Rect scale(Rect rect, float scaleX, float scaleY) {"
        errorLine2="                             ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static int area(Rect rect) {"
        errorLine2="                           ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Rect fromDimensions(Dimensions dimensions) {"
        errorLine2="                  ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Rect fromDimensions(Dimensions dimensions) {"
        errorLine2="                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Rect getInnerIntersection(@NonNull Rect rect1, @NonNull Rect rect2) {"
        errorLine2="                  ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/RectUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Screen(Context ctx) {"
        errorLine2="                  ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Screen.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getString(int id, Object... formatArgs) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Screen.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String getString(int id, Object... formatArgs) {"
        errorLine2="                                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Screen.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void reportWindowInsets(WindowInsetsCompat windowInsets) {"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Screen.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SelectionBoundary atIndex(int index) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/SelectionBoundary.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SelectionBoundary atPoint(int x, int y) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/SelectionBoundary.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SelectionBoundary atPoint(Point p) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/SelectionBoundary.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static SelectionBoundary atPoint(Point p) {"
        errorLine2="                                            ~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/SelectionBoundary.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void writeToParcel(Parcel parcel, int flags) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/aidl/SelectionBoundary.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    T supply(Progress progress) throws Exception;"
        errorLine2="             ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/Supplier.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public TaskCancelledException(String detailMessage) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/fetcher/TaskCancelledException.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public TextSelection(SelectionBoundary start, SelectionBoundary stop) {"
        errorLine2="                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/TextSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public TextSelection(SelectionBoundary start, SelectionBoundary stop) {"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/TextSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public SelectionBoundary getStart() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/TextSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public SelectionBoundary getStop() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/TextSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void writeToParcel(Parcel parcel, int flags) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/TextSelection.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void runOnUiThread(Runnable r) {"
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ThreadUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void runInBackground(Runnable r) {"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ThreadUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void postOnUiThreadDelayed(Runnable r, long delay) {"
        errorLine2="                                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ThreadUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void removeCallbackOnUiThread(Runnable r) {"
        errorLine2="                                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ThreadUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static void postOnUiThread(Runnable r) {"
        errorLine2="                                      ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/ThreadUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean setTile(TileInfo tileInfo, Bitmap tile) {"
        errorLine2="                           ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean setTile(TileInfo tileInfo, Bitmap tile) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean updateViewArea(Rect viewArea, ViewAreaUpdateCallback callback) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean updateViewArea(Rect viewArea, ViewAreaUpdateCallback callback) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected Area getExpandedArea(Rect viewArea) {"
        errorLine2="              ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected Area getExpandedArea(Rect viewArea) {"
        errorLine2="                                   ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void cancelTiles(Iterable&lt;Integer> tileIds);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void requestNewTiles(Iterable&lt;TileInfo> tiles);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        void discardTiles(Iterable&lt;Integer> tileIds);"
        errorLine2="                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Iterable&lt;Integer> getVisibleTileIndexes() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public boolean isTileVisible(TileInfo tileInfo) {"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;TileInfo> findTileInfosForRects(List&lt;Rect> rects) {"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public List&lt;TileInfo> findTileInfosForRects(List&lt;Rect> rects) {"
        errorLine2="                                                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public boolean belongsTo(TileBoard board) {"
        errorLine2="                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Dimensions getSize() {"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Dimensions getExactSize() {"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Point getOffset() {"
        errorLine2="               ~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public Rect getBounds() {"
        errorLine2="               ~~~~">
        <location
            file="src/main/java/androidx/pdf/util/TileBoard.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public TileView(Context context, TileInfo tileInfo) {"
        errorLine2="                    ~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/TileView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public TileView(Context context, TileInfo tileInfo) {"
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/TileView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public Point getOffset() {"
        errorLine2="           ~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/TileView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected void onDraw(Canvas canvas) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/TileView.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static Timer start() {"
        errorLine2="                  ~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public LogBuilder track(String event) {"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public LogBuilder track(String event) {"
        errorLine2="                                ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public LogBuilder trackFmt(String eventFmt, Object... args) {"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public LogBuilder trackFmt(String eventFmt, Object... args) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public LogBuilder trackFmt(String eventFmt, Object... args) {"
        errorLine2="                                                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void start(String key) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void track(String key, String event) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public void track(String key, String event) {"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public String stop(String key) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="        public String stop(String key) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Timer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> immediateValue(final T value) {"
        errorLine2="                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> immediateFail(final Exception error) {"
        errorLine2="                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> immediateFail(final Exception error) {"
        errorLine2="                                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;F, T> Supplier&lt;T> postConvert(final Supplier&lt;F> supplier,"
        errorLine2="                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;F, T> Supplier&lt;T> postConvert(final Supplier&lt;F> supplier,"
        errorLine2="                                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            final Converter&lt;F, T> converter) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> executeAsync(Supplier&lt;T> supplier) {"
        errorLine2="                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> executeAsync(Supplier&lt;T> supplier) {"
        errorLine2="                                                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> execute(Supplier&lt;T> supplier) {"
        errorLine2="                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> execute(Supplier&lt;T> supplier) {"
        errorLine2="                                             ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> execute(final FutureValue&lt;T> sourceFuture) {"
        errorLine2="                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> FutureValue&lt;T> execute(final FutureValue&lt;T> sourceFuture) {"
        errorLine2="                                                   ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> void pipe(FutureValue&lt;T> sourceFuture, SettableFutureValue&lt;T> targetFuture) {"
        errorLine2="                                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> void pipe(FutureValue&lt;T> sourceFuture, SettableFutureValue&lt;T> targetFuture) {"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;F, T> void convert(FutureValue&lt;F> sourceFuture, Converter&lt;F, T> converter,"
        errorLine2="                                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;F, T> void convert(FutureValue&lt;F> sourceFuture, Converter&lt;F, T> converter,"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="            final SettableFutureValue&lt;T> destFuture) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/data/UiFutureValues.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static String extractName(@NonNull Uri uri, @NonNull ContentResolver contentResolver) {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/Uris.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static boolean isFileUriInSamePackageDataDir(Uri uri) {"
        errorLine2="                                                        ~~~">
        <location
            file="src/main/java/androidx/pdf/util/Uris.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void addOverlay(String key, Drawable overlay);"
        errorLine2="                    ~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/overlays/ViewWithOverlays.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void addOverlay(String key, Drawable overlay);"
        errorLine2="                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/util/overlays/ViewWithOverlays.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static WidgetType of(int id) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/pdf/widget/WidgetType.java"/>
    </issue>

</issues>
